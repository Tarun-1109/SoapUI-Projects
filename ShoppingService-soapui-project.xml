<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="576a6fda-fc45-4d95-ad39-d3c0bb1d87b4" activeEnvironment="Default" name="ShoppingService" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="78e4852b-b323-44b7-ab7f-ea46c72aaafe" wsaVersion="NONE" name="ShoppingServiceSoapBinding" type="wsdl" bindingName="{http://expertz.me/service/eCommerce/ShoppingService/1.0}ShoppingServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/user/Downloads/Resources/ShoppingService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\C:\Users\user\Downloads\Resources\ShoppingService.wsdl"><con:part><con:url>file:\C:\Users\user\Downloads\Resources\ShoppingService.wsdl</con:url><con:content><![CDATA[<definitions name="ShoppingService" targetNamespace="http://expertz.me/service/eCommerce/ShoppingService/1.0" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:sdt="http://expertz.me/data/eCommerce/ShoppingService/1.0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ss="http://expertz.me/service/eCommerce/ShoppingService/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://expertz.me/data/eCommerce/ShoppingService/1.0" schemaLocation="ShoppingService.xsd"/>
    </xsd:schema>
  </types>
  <message name="loginRequest">
    <part name="loginRequest" element="sdt:loginRequest"/>
  </message>
  <message name="loginResponse">
    <part name="sessionId" element="sdt:sessionId"/>
  </message>
  <message name="login_faultMsg">
    <part name="loginFault" element="sdt:faultMessage"/>
  </message>
  <message name="findRequest">
    <part name="findRequest" element="sdt:findRequest"/>
  </message>
  <message name="findResponse">
    <part name="findResponse" element="sdt:findResponse"/>
  </message>
  <message name="find_faultMsg">
    <part name="findFault" element="sdt:faultMessage"/>
  </message>
  <message name="purchaseRequest">
    <part name="purchaseRequest" element="sdt:purchaseRequest"/>
  </message>
  <message name="purchaseResponse">
    <part name="purchaseResponse" element="sdt:purchaseResponse"/>
  </message>
  <message name="purchase_faultMsg">
    <part name="purchaseFault" element="sdt:faultMessage"/>
  </message>
  <message name="logoutRequest">
    <part name="logoutRequest" element="sdt:logoutRequest"/>
  </message>
  <message name="logoutResponse">
    <part name="logoutResponse" element="sdt:logoutResponse"/>
  </message>
  <message name="logout_faultMsg">
    <part name="logoutFault" element="sdt:faultMessage"/>
  </message>
  <portType name="ShoppingServicePt">
    <operation name="login">
      <input message="ss:loginRequest"/>
      <output message="ss:loginResponse"/>
      <fault name="fault" message="ss:login_faultMsg"/>
    </operation>
    <operation name="logout">
      <input message="ss:logoutRequest"/>
      <output message="ss:logoutResponse"/>
      <fault name="fault" message="ss:logout_faultMsg"/>
    </operation>
    <operation name="find">
      <input message="ss:findRequest"/>
      <output message="ss:findResponse"/>
      <fault name="fault" message="ss:find_faultMsg"/>
    </operation>
    <operation name="purchase">
      <input message="ss:purchaseRequest"/>
      <output message="ss:purchaseResponse"/>
      <fault name="fault" message="ss:purchase_faultMsg"/>
    </operation>
  </portType>
  <binding name="ShoppingServiceSoapBinding" type="ss:ShoppingServicePt">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="login">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </fault>
    </operation>
    <operation name="logout">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="find">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="purchase">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="ShoppingService">
    <port name="ShoppingServicePort" binding="ss:ShoppingServiceSoapBinding">
      <soap:address location="http://localhost:8088/mockShoppingService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\Users\user\Downloads\Resources\ShoppingService.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://expertz.me/data/eCommerce/ShoppingService/1.0" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:smsg="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <xsd:element name="faultMessage" type="xsd:string"/>
  <xsd:complexType name="FaultMessage">
    <xsd:sequence>
      <xsd:element name="errorCode" type="xsd:string"/>
      <xsd:element name="errorDesc" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="sessionId" type="smsg:SessionId"/>
  <xsd:simpleType name="SessionId">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="PurchaseItem">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="purchaseRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="smsg:SessionId"/>
        <xsd:element name="purchaseItem" type="smsg:PurchaseItem"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="loginRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="username" type="xsd:string"/>
        <xsd:element name="password" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="logoutRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="smsg:SessionId"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="logoutResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="logoutMessage" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="findRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="xsd:string"/>
        <xsd:element name="findString" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="findResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="item" type="smsg:ItemType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="ItemType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="price" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="purchaseResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="purchaseStatus" type="smsg:PurchaseStatusType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PurchaseStatusType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="stockStatus" type="xsd:string"/>
      <xsd:element name="expectedDelivery" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint></con:endpoints><con:operation id="8bb91bf4-e153-46f4-8f0d-80458f3e0f48" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find" name="find" bindingOperationName="find" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="80d3af76-088f-4d26-8ac7-10e0d3b66b05" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:findString>?</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:call></con:operation><con:operation id="fe0457cd-2445-48d4-a29f-32bda4d6ba4f" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="40ec8e6e-d664-4184-bc8a-d8de7eb70c92" name="Valid Request"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>Tarun</ns:username>\r
         <ns:password>Reddy</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/><con:wsrmConfig version="1.2"/></con:call><con:call id="1a6f5cee-a068-47c5-b02c-d1699f77bb42" name="Invalid Request"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>Tarun</ns:username>\r
         <ns:password>Reddy</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope> 
]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="0fed0ffa-42e8-481c-9949-93f50bead610" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout" name="logout" bindingOperationName="logout" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3203be53-f15d-4df1-af4c-85fedb7ab1f8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:call></con:operation><con:operation id="d8a024f6-51a8-465f-8e5a-cbf9e8423458" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase" name="purchase" bindingOperationName="purchase" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="626dc5c2-bde8-4295-ac3c-9ebfa3a4a793" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:purchaseItem>?</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:call></con:operation></con:interface><con:testSuite id="e8563b20-dcfb-44d4-bec1-d6ef9f0ac2a7" name="Shopping Functional testing"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a3475a9b-e4a0-46f2-a6cf-0ea2310f8824" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Functional Testing" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties for login" id="24d30599-42f6-4194-903f-e83a13dbbba7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>Tarun</con:value></con:property><con:property><con:name>password</con:name><con:value>Reddy</con:value></con:property><con:property><con:name>item</con:name><con:value>iPad v1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer for Login" id="acb091cf-a579-42ff-9cfd-712ecbdad8d7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username </con:name><con:sourceType>username</con:sourceType><con:sourceStep>Properties for login</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Login</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:username</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>password</con:name><con:sourceType>password</con:sourceType><con:sourceStep>Properties for login</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Login</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:password</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Login" id="a1fa3d32-db1b-4b5b-9279-cce82c80aaaa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="93f173be-9ae7-4b88-abc9-b0f9847a144a"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>Tarun</ns:username>
         <ns:password>Reddy</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d5c90e4d-1d47-45ef-9204-ccbb9e96c632"/><con:assertion type="Schema Compliance" id="cf18ab75-cac5-492b-bf1d-a5073ef79f2b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="df1671a6-ba38-4a74-9127-1f53b8584668"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Session Id Transfer" id="df6a6f4e-2583-4c6c-a7c9-310b1fd7fa1b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>session id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Login</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Logout</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="find Property Transfer" id="148f4174-9dc1-48f1-a682-b6bd963cda0b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>session id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Login</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>find</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';


//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>item</con:name><con:sourceType>item</con:sourceType><con:sourceStep>Properties for login</con:sourceStep><con:sourcePath/><con:targetType>Request</con:targetType><con:targetStep>find</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';
//*:findString</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="find" id="4c08bb5f-b996-4031-8252-0376047b1b76"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="find" id="583e9b83-3348-4fcb-bbf3-5a3d4b61491d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findRequest>
         <ns:sessionId>9370161610169739</ns:sessionId>
         <ns:findString>iPad v1</ns:findString>
      </ns:findRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d09f9bf3-ce72-4516-9149-8e9939ab74f0"/><con:assertion type="Schema Compliance" id="8c60639b-533a-4828-8177-3dfe44467a87"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="a0c0c508-6f00-4f96-acc7-26f7931cf0ef"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Pruchase  Transfer" id="4a848b89-4ffb-42aa-b7cf-a52a03e1892a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>session Id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Login</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';


//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Purchase</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';


//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Purchase" id="b986434e-9189-45fa-b6b0-b0cfb00f5e6f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="Purchase" id="515ef154-d8b3-4b6f-ac23-65acda5793c1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseRequest>
         <ns:sessionId>9370161610169739</ns:sessionId>
         <ns:purchaseItem>Android Tablet</ns:purchaseItem>
      </ns:purchaseRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a8674e62-d6f4-47c7-a671-701bac722498"/><con:assertion type="Schema Compliance" id="22ca5d4a-6a9b-4010-84e3-20eba734e868"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="b4eaf75f-892b-4a55-badf-1476471a77a0"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="de1dc57d-fc53-4dbc-97ee-0998ae740d2b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="75a48ad2-282b-4a08-b2d9-5d17ee037ad5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>9370161610169739</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bc21a09d-66d4-4045-8126-29e1dddbb67c"/><con:assertion type="Schema Compliance" id="e12c9a46-b8c9-4c83-b0a3-7e63282b670d"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="9296f3dd-d9c7-420e-891e-f47f60ddf0db"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="18d21976-e458-45ec-b0aa-e95f810dc7a0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Properties Expansion" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties for login" id="2dda5683-b41e-43d2-b9f3-c0c85bdd3c6e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>Pooja</con:value></con:property><con:property><con:name>password</con:name><con:value>welcome6</con:value></con:property><con:property><con:name>Item</con:name><con:value>iPad v1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Login" id="aaea2705-0d32-408e-b02d-5dfbd2953edf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="5800efe0-c132-4e6b-9756-399bad79c014"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>${Properties for login#username}</ns:username>\r
         <ns:password>${Properties for login#password}</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6f61ae1c-c260-4714-99e5-4359f751194e"/><con:assertion type="Schema Compliance" id="5cab99f3-2378-4329-93d2-0cb9764ff3dd"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e26556de-66cf-4182-b3ca-e653a71c755e"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="find" id="b02d9f77-ee77-4323-af1a-e56a2bb0eb12"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="find" id="5a68e10c-a81e-4876-be2d-1517a341d3f5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>${Login#Response#//*:sessionId}</ns:sessionId>\r
         <ns:findString>${Properties for login#Item}</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8f98e972-91da-42db-b7e7-980e78f55bf0"/><con:assertion type="Schema Compliance" id="72c574c0-9481-469c-878d-8750a42c9cce"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="15df4471-01d5-4d15-882e-0be4006187a3"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="To Purchase or Not to Purchase" id="e6eaad63-88ab-43ea-8e2a-9e7524add97f"><con:settings/><con:config><script>// access permisssion for particular user

//def testcs = testRunner.testCase.testSuite.project.testSuites{"Shopping Functional testing"}. testCases{"Properties Expansion"}

 //testcs.testStep ["Properties for login"].setPropertyValue
// fist step to fetch the username 

def username = context.expand('${Login#Request#//*:username}')


//to display the username in console
//log.info username 

if (username != "Tarun" || username !="Varun")
{
	log.info "Not a Previlaged user - you can't purchase"
      // TO skip ay step use the below one
	testRunner.gotoStepByName("Logout")
}
else
{
	log.info "Process the Purchase"
}


</script></con:config></con:testStep><con:testStep type="request" name="Purchase" id="1b690aed-f0d6-4ea5-b9e4-3389c5d13ad2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="Purchase" id="cf606ff7-a211-4eac-9dcd-877fc050d889"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>${Login#Response#//*:sessionId}</ns:sessionId>\r
         <ns:purchaseItem>${Properties for login#Item}</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c307ac76-5a15-4b4e-8854-783efd3385d7"/><con:assertion type="Schema Compliance" id="156034bb-b01f-451f-8c19-f02757bca889"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="f6037fd5-f858-4591-9d0e-5d45d9ae05fe"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="162de7fb-187a-404b-8e44-583fdaab5c52"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="79e45539-6deb-4c93-bb36-bcb8a864fd4a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>${Login#Response#//*:sessionId}</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="541fa4b3-cae2-4341-8683-6edfbedb167c"/><con:assertion type="Schema Compliance" id="d1a08cad-cbfb-4e08-abe9-5e5f3cf5b68f"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="6db50822-e4f9-4c26-b5b6-5e691283b47d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="34010f08-3ee3-44d8-8638-f096acc8d8f1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Script Based Execution" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties for login" id="3a3cc615-d6de-43e2-bc54-51ca72acd77a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>Pooja</con:value></con:property><con:property><con:name>password</con:name><con:value>welcome6</con:value></con:property><con:property><con:name>Item</con:name><con:value>iPad v1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Login" id="b2a46dff-a43e-46c5-8b51-029c1ab464a4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="5800efe0-c132-4e6b-9756-399bad79c014"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>${Properties for login#username}</ns:username>\r
         <ns:password>${Properties for login#password}</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6f61ae1c-c260-4714-99e5-4359f751194e"/><con:assertion type="Schema Compliance" id="5cab99f3-2378-4329-93d2-0cb9764ff3dd"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e26556de-66cf-4182-b3ca-e653a71c755e"/><con:assertion type="GroovyScriptAssertion" id="0afd9921-8ac6-4f45-808f-2af325a153fe" name="get and store the response"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
// to capture the response and fetch the sessionID and store it in test case/test suite

//create a variable called response 
// fecth the entire response and store it in this variable
def response = context.testCase.getTestStepByName('Login').getPropertyValue("Response")

//holdee
//to store this entire response in a holder
// that i can get a specify data and store it again
def holder = new XmlHolder(response)

//get node value is used when i want to fetch a specific response data
def cls = holder.getNodeValue("//*:sessionId")

// to store the session id in test suite level so that i can use it all my test case
context.testCase.testSuite.setPropertyValue("sessionId",cls)

//i store it in  the test case
context.testCase.setPropertyValue("sessionId",cls)

//To access this across project levek=l
context.testCase.testSuite.project.setPropertyValue("sessionId",cls)

//To see the vlaue in console
log.info  cls
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Find" id="9a58de5d-e4cc-430f-bb2a-e7e364a7c940"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="Find" id="be023afb-659e-4c2e-a11f-5b1814f18183"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>${#Project#sessionId}</ns:sessionId>\r
         <ns:findString>${Properties for login#item}</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="20cd02a1-a7f9-4139-8003-3f28ad9becc2"/><con:assertion type="Schema Compliance" id="46413960-4997-4df3-87c8-d6384fff9e73"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="f990c75d-963c-43df-a727-0e26290cf7f3"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Purchase" id="9c63c093-4d0a-45a6-b3bd-2477573a0dc6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="Purchase" id="b05ff0b4-2092-43e4-92af-6ef7cb48552b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>${#TestCase#sessionId}</ns:sessionId>\r
         <ns:purchaseItem>${Properties for login#item}</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cdf319db-8c75-4b43-948e-6af8ab0ebd03"/><con:assertion type="Schema Compliance" id="436142f3-9397-4985-a415-d47d5745e40a"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="fe50605a-475f-4a38-9e79-730053debe59"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="750985f5-f451-492b-9759-e2bafa8599ab"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="79e45539-6deb-4c93-bb36-bcb8a864fd4a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>${#TestCase#sessionId}</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="541fa4b3-cae2-4341-8683-6edfbedb167c"/><con:assertion type="Schema Compliance" id="d1a08cad-cbfb-4e08-abe9-5e5f3cf5b68f"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="6db50822-e4f9-4c26-b5b6-5e691283b47d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>sessionId</con:name><con:value>7490801757090492</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>sessionId</con:name><con:value>7490801757090492</con:value></con:property></con:properties></con:testSuite><con:testSuite id="4f8734ac-c981-46fb-8b36-56afb6b25ff1" name="System Testing"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e53c58ec-2b85-44c7-b6ad-ce298d4dc0b5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="System Testing" searchProperties="true"><con:settings/><con:testStep type="groovy" name="System Testing" id="393043d5-eead-4b38-bf1b-9baf0f77203b"><con:settings/><con:config><script>// From here i want to execute Script Based Execution

//used to run script based exceution from one test case/suit to another test case/suit
//it is different test suite
def tc = testRunner.testCase.testSuite.Project.testSuites["Shopping Functional testing"].testCases["Script Based Execution"]

tc.testSteps["Properties for login"].setPropertyValue("username","Varun")
tc.testSteps["Properties for login"].setPropertyValue("password","Reddy")

def username = context.expand('${Login#Request#//*:username}')
log.info username
//running the entire test case by changing the data
//if we're running more than one step in testcase
//you have to say null means there is no context and false is becasue i'm not chekcing 
tc.run(null,false)
 
def teststeplist = tc.getTestStepList()
log.info teststeplist.size()
//log.info TSL
// to see the names of my test steps

teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the current step which i'm excecuting
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Exceution Property Expansion Login and Logout" id="d26fd3b1-c8b6-4d0c-932f-dde744d70729"><con:settings/><con:config><script>def tc = testRunner.testCase.testSuite.project.testSuites["Shopping Functional testing"].testCases["Script Based Execution"]
tc.testSteps["Properties for login"].setPropertyValue("username","Varun")
tc.testSteps["Properties for login"].setPropertyValue("password","Reddy")
def username  = tc.testSteps["Properties for login"].getPropertyValue("username")
log.info username

//this line will execute the entire testcase
def runner = tc.run(null,false)
def teststeplist = tc.getTestStepList()

//log.info TSL
//i want see the names of the my test steps
teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the currect step which i am executing
	//log.info tc.getCurrentStep().name
}

//i want to know the status of my execution
//It shows  the execution status
log.info "Status: $runner.status "

//to check  the time taken forexecution
log.info "TimeTaken: $runner.timeTaken"
//to know the number of steps executed
log.info "Number of Steps executed is :" + runner.results.size()
def valid = 6
def Invalid = 5

if(runner.results.size() == 6)
{
	log.info "The Entered Name is Valid"
	//Assert
     assert runner.results.size() == valid
}
else
{
	log.info "The Entered Name is Invalid"
	assert runner.results.size() == Invalid
}









</script></con:config></con:testStep><con:testStep type="groovy" name="Data Driven Testing" id="6ab97bfc-c25a-42a6-b375-e5c155d00704"><con:settings/><con:config><script>//jxl is jar which helps connect to te excel to read and write data for me
//since i am a tester i read data 
import jxl.*

def filepath = "C://Users//user//Desktop//Test Data.xls"

//where the file is to read
File Excel = new File(filepath)

//excelsheet basically it contains workbook and sheets
//i have to get the workbook
Workbook wb = Workbook.getWorkbook(Excel)

//i am trying to get the sheet
Sheet sh = wb.getSheet("Sheet1")

def row = sh.getRows().toInteger()

def column = sh.getColumns().toInteger()

log.info "The Number of rows are $row and The Number of column are $column"

//i want to fetch the data in each row and column
for(def i=0;i&lt;row;i++)
{
	for(def j=0;j&lt;column;j++)
	{
		if(j==0)
		{
			username = sh.getCell(j,i).getContents()
		}
		else
		{
			password = sh.getCell(j,i).getContents()
		}
	}
	log.info "$username and $password"
}

def tc = testRunner.testCase.testSuite.project.testSuites["Shopping Functional testing"].testCases["Script Based Execution"]
tc.testSteps["Properties for login"].setPropertyValue("username",username)
tc.testSteps["Properties for login"].setPropertyValue("password",password)
def username  = tc.testSteps["Properties for login"].getPropertyValue("username")
log.info username

//this line will execute the entire testcase
def runner = tc.run(null,false)
def teststeplist = tc.getTestStepList()

//log.info TSL
//i want see the names of the my test steps
teststeplist.each
{
	def tsname = it.name
	log.info tsname
	//fetch the currect step which i am executing
	//log.info tc.getCurrentStep().name
}

//i want to know the status of my execution
//It shows  the execution status
log.info "Status: $runner.status "

//to check  the time taken forexecution
log.info "TimeTaken: $runner.timeTaken"
//to know the number of steps executed
log.info "Number of Steps executed is :" + runner.results.size()
def valid = 6
def Invalid = 5

if(runner.results.size() == 6)
{
	log.info "The Entered Name is Valid"
	//Assert
     assert runner.results.size() == valid
}
else
{
	log.info "The Entered Name is Invalid"
	assert runner.results.size() == Invalid
}









</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="46e4aca6-4f5d-4cdc-8fc3-bb4e9b3411c0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Database Testing" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="JDBC Request" id="cc964ced-370d-44d6-a694-de996a4ca56c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString>jdbc:mysql://localhost:3306/Functionaltesting?user=root&amp;password=root</con:connectionString><con:query>select * from Login;</con:query><con:properties/></con:config></con:testStep><con:testStep type="request" name="Login" id="182b3e8c-cffe-46af-8738-abee9a0d8ae1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login" id="0ad6f857-b70c-446e-86aa-41a89089e1f2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>${JDBC Request#ResponseAsXml#//ResultSet/Row[3]/LOGIN.NAME}</ns:username>\r
         <ns:password>${JDBC Request#ResponseAsXml#//ResultSet/Row[3]/LOGIN.PASSWORD}</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" id="79863326-f39e-461c-bfa9-6eeb0aaebbb8"/><con:assertion type="Schema Compliance" id="b662fb4f-0fb5-44e8-812a-55cf26ac1798"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="bc27eef6-e827-4e76-8158-ef18abd6f39d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Logout" id="2fa1294c-c39d-4fba-bd9a-bda354378f81"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Logout" id="5b7b7a64-cf31-4198-bd7f-2fd5758efb28"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>${Login#Response#//*:sessionId}</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="15df7bcd-d99b-40b4-866e-bcee2b87b069"/><con:assertion type="Schema Compliance" id="8b593d56-9e50-429b-b1db-0ebe332dbbc1"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="9bff9f97-8c39-4675-9b2d-5303d63e7110"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC Request 1" id="b651cd79-e59a-49ad-9bcd-787f3ebb5f19"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString>jdbc:mysql://localhost:3306/Testing?user=root&amp;password=root</con:connectionString><con:query>select * from Liger;</con:query><con:properties/></con:config></con:testStep><con:testStep type="request" name="Login Liger" id="37f47714-577a-4be4-bd67-a01520559939"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Login Liger" id="fbfae055-48a6-4aec-8c9d-243f48d771cf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-10G2ADP:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>${JDBC Request 1#ResponseAsXml#//ResultSet/Row[1]/LIGER.NAME}</ns:username>\r
         <ns:password>${JDBC Request 1#ResponseAsXml#//ResultSet/Row[1]/LIGER.PASSWORD}</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc91f6e-bf44-4c7b-bee4-266f00a7a99c"/><con:assertion type="Schema Compliance" id="caef408f-b864-4200-b80f-a51bc932069b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="b91af4b4-5e20-4464-83e2-321b9698368a"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService port="8088" path="/mockShoppingService" host="chethan-PC" name="ShoppingServiceSoapBinding MockService" bindToHostOnly="false" docroot="" id="2f7a499c-6057-4942-857e-14aa8ed59227"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:mockOperation name="find" interface="ShoppingServiceSoapBinding" operation="find" id="9531706c-9d53-4dcd-9537-abda3acdfceb"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP006'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Find"
}

// Get the query string
def itemDesc = holder.getNodeValue( "//*:findString" )

// This is our item list. Feel free to add more items if you want...
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ,stockStatus: "100", expectedDelivery: "30-JUL-2012"]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP"  ,stockStatus: "50", expectedDelivery: "30-JUL-2012"]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP"  ,stockStatus: "10", expectedDelivery: "30-AUG-2012"]


//def itemList = context.getProperty("itemList")

// Check if we have an item with the same description as the search string
if(itemList.containsKey(itemDesc)){
	// Populate item details and send success message
	def item = itemList[itemDesc]
	requestContext.itemId = item.id
	requestContext.itemDescription = item.desc
	requestContext.itemPrice = item.price
	return "Successful Find"
}

// We couldn't find a particular item for the search. 
//In the demo we don't support generic queries. So send a fault message
requestContext.faultCode = 'APP007'
requestContext.faultShortDesc = 'Invalid Query'
requestContext.faultCausedBy = 'Search System'
requestContext.faultDesc = 'In the demo we do not support generic queries and we could not find any items with the given string!!!'
return "Fault Find"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Find" encoding="UTF-8" id="f8387ecd-6b64-4c59-8935-7d4d32c59450" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findResponse>
         <ns:item>
            <ns:id>${itemId}</ns:id>
            <ns:description>${itemDescription}</ns:description>
            <ns:price>${itemPrice}</ns:price>
         </ns:item>
      </ns:findResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:response name="Fault Find" encoding="UTF-8" id="72c4afdf-77ec-4fbb-bf55-4f7be7f991b9" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      ${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="login" interface="ShoppingServiceSoapBinding" operation="login" id="9ca6425e-cbfa-46c6-94b6-7e41be6e785a"><con:settings/><con:dispatchPath>// Initialize Util classes to retrieve XML value
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the username and Password values provided
def username = holder.getNodeValue( "//*:username" )
def password = holder.getNodeValue( "//*:password" )

// validate by checking that the User is not already logged in
// Username is of required length and Password doesn't end with 123!!!
if( context.hasProperty( username )  || username.length() > 10 || username.length() &lt; 3 || password.endsWith( "123" )){
	// If user is already loggged in, set different fault codes compared to others
	if(context.hasProperty( username )){
		requestContext.faultCode = 'APP001'
		requestContext.faultShortDesc = 'Already Logged In'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'User is already logged in. If you want to login as another user logout first'
	}
	else{
		// Set relevant error code and desc. For the demo, we will keep it simple
		requestContext.faultCode = 'APP002'
		requestContext.faultShortDesc = 'Invalid Login Credentials'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'Invalid Login Credentials. Please try again.'
	}
	// Specify which response to send back
	return "Fault Login"	
}

// Seems like a valid request, so generate session ID
// Note that we don't do password verification in the demo
def sessionid = String.valueOf( Math.random() ).substring( 2 )

// Set the user name and session ID as valid sessions and logged in user in context
// This helps in looking up to see if the user is logged in or if this is a valid session ID
context.setProperty( username, sessionid )
context.setProperty( sessionid, username )

requestContext.sessionid = sessionid
return "Successful Login"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Successful Login</con:defaultResponse><con:response name="Successful Login" encoding="UTF-8" id="e9622f71-43f1-4292-83c5-0aa8445da6ba" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sessionId>${sessionid}</ns:sessionId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:response name="Fault Login" encoding="UTF-8" id="798e1ca6-3c37-4047-b3a9-536f4f22335e" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
        <ns:faultMessage>${faultDesc}</ns:faultMessage>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="logout" interface="ShoppingServiceSoapBinding" operation="logout" id="4875068d-ca2a-44f7-96f8-8194f185ffcf"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP003'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Logout"
}

// logout from the system by removing the relevant context
context.removeProperty( context.getProperty( sessionid ))
context.removeProperty( sessionid )
requestContext.logoutMessage = "Successfully logged out of the system."

return "Successful Logout"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Logout" encoding="UTF-8" id="a1486e38-10e5-480d-b2f3-422144c3f9ba" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutResponse>
         <ns:logoutMessage>${logoutMessage}</ns:logoutMessage>
      </ns:logoutResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:response name="Fault Logout" encoding="UTF-8" id="08830225-c66d-4177-944c-518af14cf8a9" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      ${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="purchase" interface="ShoppingServiceSoapBinding" operation="purchase" id="84536080-96a8-4129-8c69-7f38726fa80d"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP010'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Find"
}

// Get the query string
def itemDesc = holder.getNodeValue( "//*:purchaseItem" )

// This is our item list. Feel free to add more items if you want...
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ,stockStatus: "100", expectedDelivery: "30-JUL-2012"]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP"  ,stockStatus: "50", expectedDelivery: "30-JUL-2012"]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP"  ,stockStatus: "10", expectedDelivery: "30-AUG-2012"]


//def itemList = context.getProperty("itemList")

// Check if we have an item with the same description as the search string
if(itemList.containsKey(itemDesc)){
	// Populate item details and send success message
	def item = itemList[itemDesc]
	requestContext.itemId = item.id
	requestContext.itemStockStatus = item.stockStatus
	requestContext.itemExpectedDelivery = item.expectedDelivery
	return "Successful Purchase"
}

// We couldn't find a particular item for the search. 
//In the demo we don't support generic queries. So send a fault message
requestContext.faultCode = 'APP011'
requestContext.faultShortDesc = 'Invalid Item'
requestContext.faultCausedBy = 'Purchase System'
requestContext.faultDesc = 'In the demo we do not support bulk buys or add to cart kind of operations. We could not find any items with the given name!!!'
return "Fault Purchase"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Purchase" encoding="UTF-8" id="099498a6-adce-4c50-8d25-80c613f0cd2b" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseResponse>
         <ns:purchaseStatus>
            <ns:id>${itemId}</ns:id>
            <ns:stockStatus>${itemStockStatus}</ns:stockStatus>
            <ns:expectedDelivery>${itemExpectedDelivery}</ns:expectedDelivery>
         </ns:purchaseStatus>
      </ns:purchaseResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:response name="Fault Purchase" encoding="UTF-8" id="4866a8c5-2049-4090-aee4-fe3a12152a41" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      	${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:dispatchConfig/></con:mockOperation><con:startScript>/*
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP" ]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP" ]

context.setProperty("itemList", itemList)
*/</con:startScript><con:properties/></con:mockService><con:properties><con:property><con:name>sessionId</con:name><con:value>7490801757090492</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>